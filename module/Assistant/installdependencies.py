#install ypython
import os, time
#Mimic Compilation
#memorymanagementextenson


# Dependencies installation Developer Note

# NOTE TO DEVELOPER for porting aarch64 requires edge OS such as archlinux
# Therefore it is fully supported only for archlinux or other distros that based on the archlinux
# To accelerate installation please include python modules to pacman install commands
# So compilation can be prevented thus save resources




os.system("bash /commands/checkinternet.sh")
# I wish i was a genius, more than A.... ~muddro
os.system("play -q /sfx/sfxinstall.mp3 repeat 5 & >/dev/null 2>/dev/null")
os.system("bash /ui/installui/installui.sh &")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("pacman -S ifconfig --noconfirm --needed")
os.system("echo DEBUG Transitioning to python installdependencies installation wizard ")
os.system("echo WARN see the main terminal to see the progress ")
os.system("echo WARN the display might be blinking and we might fix it in the later patch | osd_cat -c red -p bottom -A center")
#update system
os.system("useradd recovery")
os.system("alias ") # alias whaaaaaat?
os.system("userdel -f orion")
os.system("echo please define password for the AI Current password is orion")
os.system("useradd orion")
#os.system("useradd -m -s /bin/bash orion")
#os.system("passwd orion")
os.system("pacman -Syu --ignore='zsh systemd' --noconfirm")
os.system("apt-get update")
os.system("cd /Assistant/locinst/earlyoom ; make ; make install ; cd /Assistant")
#arm based devices needed to do make command while x86 do not
os.system("echo DEBUG Installing System Utilities ")
os.system("cd /Assistant/locinst/mimic ; make install ; cd /Assistant")
os.system("pacman -S evtest wireshark-cli usbutils --noconfirm --needed")
os.system("pacman --needed -S xosd git psmisc busybox htop nano imagemagick python2-pip httrack lynx httrack gedit npm sqlitebrowser python-pip python2-setuptools qemu python-setuptools wget sox dialog ffmpeg cool-retro-term espeak pamixer musescore gthumb gcc-fortran base-devel tk swig python-virtualenv python2-virtualenv --noconfirm --overwrite '*' ")
os.system("pacman --needed -S tensorflow yaourt bazel electron --noconfirm --overwrite '*' ")
os.system("pacman --needed -S hdf5 python-h5py python2-h5py python-numpy python2-numpy python2-pandas python-pandas python-scipy python2-scipy --noconfirm --overwrite '*' ")
os.system("apt-get -y install git npm gedit python-dev python3.5-dev wget libblas-dev qemu-user-static binfmt-support qemu python-scipy python3.5-scipy wget gfortran liblapack-dev dialog ffmpeg libatlas-base-dev python-pip sox espeak musescore gthumb python-tk swig virtualenv python-virtualenv python-virtualenv ")
#os.system("cp -rv /Assistant/locinst/python2repo/* /usr/lib/python2.7/site-packages")
#os.system("cp -rv /Assistant/locinst/python3.5repo/* /usr/lib/python3.5.7/site-packages")
# If there is not enough space left
#os.system("ln -s /Assistant/locinst/python2repo/* /usr/lib/python2.7/site-packages")
#os.system("bash /Assistant/locinst/python2install.sh >/dev/null")
#os.system("bash /Assistant/locinst/python3.5install.sh >/dev/null")
#os.system("ln -s /Assistant/locinst/python3.5repo/* /usr/lib/python3.5.7/site-packages")
#in ubuntu or other system may be labeled as python-tk rather than tk
#os.system("")
#arm based device emulation
#in debian python2-virtualenv is virtualenv
os.system("echo DEBUG Downloading Git repositories ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("bash /Assistant/locinst/gitpullcomponent.sh")
os.system("echo DEBUG Compiling python35 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("bash /Assistant/locinst/custompythonhandler.sh")
os.system("")
os.system("curl -sL --insecure https://bootstrap.pypa.io/get-pip.py | python3.5 -")
os.system("python2 -m pip install --upgrade pip")
os.system("python3.5 -m pip install --upgrade pip")
os.system("python3.5 -m pip install setuptools")
os.system("python2 -m easy_install pip")
#os.system("git clone https://github.com/jjhelmus/berryconda")
#os.system("cd locinst/berryconda")
#Porting to Arm change x86 to arm link ,however i do not have the link so dont ask me
#os.system("export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.8.0-cp27-none-linux_x86_64.whl")
#os.system("python2 -m easy_install --upgrade $TF_BINARY_URL")
os.system("echo DEBUG Installing python modules progress 1 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("python2 -m easy_install -e git+https://github.com/mycroftai/adapt#egg=adapt-parser")
#os.system("python3.5 -m easy_install -e git+https://github.com/mycroftai/adapt#egg=adapt-parser")
os.system("python2 -m easy_install pycosat")
os.system("python3.5 -m easy_install pycosat")
os.system("python2 -m easy_install urllib3")
os.system("python3.5 -m easy_install urllib3")
os.system("python2 -m easy_install idna")
os.system("python3.5 -m easy_install idna")
os.system("python2 -m easy_install ruamel.yaml")
os.system("python3.5 -m easy_install ruamel.yaml")
#intent parser for python3.5 locally
os.system("python2 -m easy_install h5py")
os.system("python3.5 -m easy_install h5py")
os.system("python2 -m easy_install conda")
os.system("python3.5 -m easy_install conda")
os.system("python2 -m conda -y install scikit-learn")
os.system("python3.5 -m pip install pretty-midi")
os.system("python3.5 -m easy_install python-midi")
os.system("python3.5 -m conda -y install scikit-learn")
os.system("python3.5 -m pip install tensorflow")
os.system("python3.5 -m pip install tensorflow")
os.system("python2 -m conda -y install cython")
os.system("python2 -m conda -y install pandas")
os.system("python3.5 -m conda -y install cython")
os.system("python3.5 -m easy_install pandas")
os.system("cd /Assistant/locinst/adapt ; easy_install -r requirements.txt ; cd /Assistant")
os.system("python2 -m pip install tensorflow")
os.system("python2 -m easy_install SpeechRecognition")
os.system("python3.5 -m easy_install SpeechRecognition")
os.system("echo DEBUG Installing python modules progress 2 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("python2 -m easy_install grammar_check")
#os.system("python2 -m easy_install seq2seq_model")
os.system("python2 -m easy_install data_utils")
os.system("python2 -m easy_install librosa")
os.system("python2 -m conda -y install madmom")
os.system("python3.5 -m conda -y install madmom")
os.system("python2 -m easy_install cython")
os.system("python2 -m easy_install madmom")
#os.system("python2 -m easy_install build_ext")
#os.system("python3.5 -m easy_install build_ext")
os.system("python2 -m easy_install matplotlib")
#os.system("python2 -m easy_install python-tk")
os.system("python2 -m easy_install pretty-midi")
os.system("python2 -m easy_install nltk")
os.system("python2 -m easy_install scikit-image")
os.system("python2 -m easy_install six")
os.system("python3.5 -m easy_install six")
os.system("python3.5 -m easy_install flask")
os.system("python2 -m easy_install flask")
os.system("python2 -m easy_install python-midi")
os.system("python2 -m easy_install -U protobuf==3.0.0b2")
os.system("python2 -m easy_install swig")
os.system("python2 -m easy_install mingus")
os.system("python2 -m easy_install wikipedia")
os.system("python2 -m easy_install PyUserInput")
os.system("python2 -m easy_install tinydb")
os.system("python2 -m easy_install youtube_dl")
os.system("python2 -m easy_install spacy")
os.system("python2 -m easy_install pyowm")
os.system("python2 -m easy_install requests")
os.system("python2 -m easy_install deepspeech")
os.system("python2 -m easy_install httplib2")
os.system("python2 -m easy_install imutils")
os.system("python2 -m easy_install pyqtgraph")
os.system("python2 -m easy_install PeakUtils")
os.system("python2 -m easy_install tweepy")
os.system("python2 -m easy_install metadata_parser")
os.system("python2 -m easy_install nltk")
os.system("python2 -m easy_install hug")
os.system("python2 -m easy_install hug-middleware-cors")
os.system("python2 -m easy_install waitress")
os.system("python2 -m easy_install pyjwt")
os.system("python2 -m easy_install SQLAlchemy")
os.system("python2 -m easy_install PyMySQL")
os.system("python2 -m easy_install flake8")
os.system("python2 -m easy_install sphinx")
os.system("python2 -m easy_install sphinx_rtd_theme")
os.system("python2 -m easy_install recommonmark")
os.system("python2 -m easy_install m2r")
os.system("python2 -m easy_install pytest")
os.system("python2 -m easy_install nltk")
#Resources for tensorflow-on-arm https://github.com/lhelontra/tensorflow-on-arm/releases
#os.system("python3.5 -m easy_install tensorflow-aarch64") This version is too old to be used
#while tensorflow-on-arm is up to date
os.system("python3.5 -m pip https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.13.1/tensorflow-1.13.1-cp35-none-linux_armv7l.whl")
os.system("python3.5 -m pip https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.13.1/tensorflow-1.13.1-cp35-none-linux_aarch64.whl")
os.system("python2 -m easy_install magenta")
os.system("python3.5 -m easy_install magenta")
os.system("echo DEBUG Installing python modules progress 3 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("python2 -m easy_install urlib")
os.system("python2 -m easy_install geocoder")
os.system("python2 -m easy_install langdetect")
os.system("python3.5 -m easy_install langdetect")
os.system("python3.5 -m easy_install keras")
os.system("python2 -m easy_install zipfile")
#os.system("python2 -m easy_install nottingham_util")
os.system("python2 -m easy_install rnn")
os.system("python2 -m easy_install lasagne")
#os.system("python2 -m easy_install --upgrade https://github.com/Lasagne/Lasagne/archive/master.zip")
os.system("python2 -m easy_install tensorflow")
os.system("python2 -m easy_install wolframalpha")
os.system("python2 -m easy_install pocketsphinx")
os.system("python3.5 -m easy_install pocketsphinx")
os.system("python2 -m easy_install flaskapi")
os.system("echo DEBUG Installing python modules progress 4 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("python2 -m easy_install pyaudio")
os.system("python2 -m easy_install keyboard")
os.system("python2 -m easy_install np")
os.system("python2 -m easy_install numpy")
os.system("python2 -m easy_install scipy")
os.system("python2 -m easy_install h5py")
os.system("python2 -m easy_install sklearn")
os.system("python3.5 -m easy_install sklearn")
os.system("python2 -m easy_install pillow")
os.system("python2 -m easy_install cuda")
os.system("python2 -m easy_install cudnn")
os.system("python2 -m easy_install six")
os.system("python2 -m easy_install theano")
os.system("python2 -m easy_install music21")
os.system("python2 -m easy_install keras")
os.system("python2 -m easy_install pandas")
os.system("python2 -m easy_install msgpack")
os.system("python2 -m easy_install sounddevice")
os.system("python2 -m easy_install soundfile")
os.system("python3.5 -m easy_install sounddevice")
os.system("python3.5 -m easy_install soundfile")
os.system("python2 -m easy_install glob")
os.system("python2 -m easy_install tqdm")
os.system("echo DEBUG Installing python modules progress 5 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")

#python3.5 dependencies start
os.system("python3.5 -m easy_install theano")
os.system("rm -rf tensorflow-0.11.0rc0-py3-none-any.whl")
#os.system("wget https://github.com/hughperkins/tensorflow-cl/releases/download/v0.14.0/tensorflow-0.11.0rc0-py3-none-any.whl")
#os.system("python3.5 -m pip install --upgrade tensorflow-0.11.0rc0-py3-none-any.whl")
#os.system("python2 -m pip install --upgrade tensorflow-0.11.0rc0-py3-none-any.whl")
os.system("python3.5 -m easy_install tensorflow==1.7")
os.system("python3.5 -m easy_install tensorflow==1.7")
os.system("python3.5 -m easy_install numpy")
os.system("python3.5 -m easy_install mido")
os.system("python3.5 -m easy_install tqdm")
os.system("python3.5 -m easy_install itertools")
os.system("python3.5 -m easy_install sumy")
os.system("python3.5 -m easy_install tensorflow")
os.system("python3.5 -m easy_install music21")
os.system("python3.5 -m easy_install keras")
os.system("bash /Assistant/locinst/aarch64handler.sh")
os.system("echo DEBUG Installing python modules progress 6 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
#repeating command because im lazy to replace all commands xd
os.system("python3.5 -m easy_install -e git+https://github.com/mycroftai/adapt#egg=adapt-parser")
#os.system("python3.5 -m easy_install -e git+https://github.com/mycroftai/adapt#egg=adapt-parser")
os.system("python3.5 -m easy_install pycosat")
os.system("python3.5 -m easy_install pycosat")
os.system("python3.5 -m easy_install urllib3")
os.system("python3.5 -m easy_install urllib3")
os.system("python3.5 -m easy_install idna")
os.system("python3.5 -m easy_install idna")
os.system("python3.5 -m easy_install ruamel.yaml")
os.system("python3.5 -m easy_install ruamel.yaml")
#intent parser for python3.5 locally
os.system("python3.5 -m easy_install h5py")
os.system("python3.5 -m easy_install sumy")
os.system("python3.5 -m easy_install h5py")
os.system("python3.5 -m easy_install conda")
os.system("python3.5 -m easy_install conda")
os.system("python3.5 -m conda -y install scikit-learn")
os.system("python3.5 -m pip install pretty-midi")
os.system("python3.5 -m pip install git+https://github.com/vishnubob/python-midi@feature/python3")
os.system("python3.5 -m easy_install moviepy")
os.system("python3.5 -m easy_install python-midi")
os.system("python3.5 -m conda -y install scikit-learn")
os.system("python3.5 -m easy_install DataReader")
os.system("python3.5 -m pip install tensorflow")
os.system("python3.5 -m pip install tensorflow")
os.system("python3.5 -m conda -y install cython")
os.system("python3.5 -m conda -y install pandas")
os.system("python3.5 -m conda -y install cython")
os.system("python3.5 -m easy_install pandas")
os.system("cd /Assistant/locinst/adapt ; easy_install -r requirements.txt ; cd /Assistant")
os.system("python3.5 -m pip install tensorflow")
os.system("python3.5 -m easy_install SpeechRecognition")
os.system("python3.5 -m easy_install SpeechRecognition")
os.system("echo DEBUG Installing python modules progress 7 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("python3.5 -m easy_install grammar_check")
#os.system("python3.5 -m easy_install seq2seq_model")
os.system("python3.5 -m easy_install data_utils")
os.system("python3.5 -m easy_install librosa")
os.system("python3.5 -m conda -y install madmom")
os.system("python3.5 -m conda -y install madmom")
os.system("python3.5 -m easy_install cython")
os.system("python3.5 -m easy_install madmom")
#os.system("python3.5 -m easy_install build_ext")
#os.system("python3.5 -m easy_install build_ext")
os.system("python3.5 -m easy_install matplotlib")
#os.system("python3.5 -m easy_install python-tk")
os.system("python3.5 -m easy_install pretty-midi")
os.system("python3.5 -m easy_install nltk")
os.system("python3.5 -m easy_install scikit-image")
os.system("python3.5 -m easy_install six")
os.system("python3.5 -m easy_install six")
os.system("python3.5 -m easy_install flask")
os.system("python3.5 -m easy_install flask")
os.system("python3.5 -m easy_install python-midi")
os.system("python3.5 -m easy_install -U protobuf==3.0.0b2")
os.system("python3.5 -m easy_install swig")
os.system("python3.5 -m easy_install mingus")
os.system("python3.5 -m easy_install wikipedia")
os.system("python3.5 -m easy_install PyUserInput")
os.system("python3.5 -m easy_install tinydb")
os.system("echo DEBUG Installing python modules progress 8 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("python3.5 -m easy_install youtube_dl")
os.system("python3.5 -m easy_install spacy")
os.system("python3.5 -m easy_install pyowm")
os.system("python3.5 -m easy_install requests")
os.system("python3.5 -m easy_install deepspeech")
os.system("python3.5 -m easy_install httplib2")
os.system("python3.5 -m easy_install imutils")
os.system("python3.5 -m easy_install pyqtgraph")
os.system("python3.5 -m easy_install PeakUtils")
os.system("python3.5 -m easy_install tweepy")
os.system("python3.5 -m easy_install metadata_parser")
os.system("python3.5 -m easy_install nltk")
os.system("python3.5 -m easy_install hug")
os.system("python3.5 -m easy_install hug-middleware-cors")
os.system("python3.5 -m easy_install waitress")
os.system("python3.5 -m easy_install pyjwt")
os.system("python3.5 -m easy_install SQLAlchemy")
os.system("python3.5 -m easy_install PyMySQL")
os.system("python3.5 -m easy_install flake8")
os.system("python3.5 -m easy_install sphinx")
os.system("python3.5 -m easy_install sphinx_rtd_theme")
os.system("python3.5 -m easy_install recommonmark")
os.system("python3.5 -m easy_install m2r")
os.system("python3.5 -m easy_install pytest")
os.system("python3.5 -m easy_install nltk")
os.system("python3.5 -m easy_install tensorflow-aarch64")
os.system("python3.5 -m easy_install magenta")
os.system("python3.5 -m easy_install magenta")
os.system("echo DEBUG Installing python modules progress 9 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")

os.system("python3.5 -m easy_install urlib")
os.system("python3.5 -m easy_install geocoder")
os.system("python3.5 -m easy_install langdetect")
os.system("python3.5 -m easy_install langdetect")
os.system("python3.5 -m easy_install keras")
os.system("python3.5 -m easy_install zipfile")
#os.system("python3.5 -m easy_install nottingham_util")
os.system("python3.5 -m easy_install rnn")
os.system("python3.5 -m easy_install lasagne")
#os.system("python3.5 -m easy_install --upgrade https://github.com/Lasagne/Lasagne/archive/master.zip")
os.system("python3.5 -m easy_install tensorflow")
os.system("python3.5 -m easy_install wolframalpha")
os.system("python3.5 -m easy_install pocketsphinx")
os.system("python3.5 -m easy_install pocketsphinx")
os.system("python3.5 -m easy_install flaskapi")

os.system("python3.5 -m easy_install pyaudio")
os.system("python3.5 -m easy_install keyboard")
os.system("python3.5 -m easy_install np")
os.system("python3.5 -m easy_install numpy")
os.system("python3.5 -m easy_install scipy")
os.system("python3.5 -m easy_install h5py")
os.system("python3.5 -m easy_install sklearn")
os.system("python3.5 -m easy_install sklearn")
os.system("python3.5 -m easy_install pillow")
os.system("python3.5 -m easy_install cuda")
os.system("python3.5 -m easy_install cudnn")
os.system("python3.5 -m easy_install six")
os.system("python3.5 -m easy_install theano")
os.system("python3.5 -m easy_install music21")
os.system("python3.5 -m easy_install keras")
os.system("python3.5 -m easy_install pandas")
os.system("python3.5 -m easy_install msgpack")
os.system("python3.5 -m easy_install sounddevice")
os.system("python3.5 -m easy_install soundfile")
os.system("python3.5 -m easy_install sounddevice")
os.system("python3.5 -m easy_install soundfile")
os.system("python3.5 -m easy_install glob")
os.system("python3.5 -m easy_install tqdm")
os.system("python3.5 -m easy_install pyscreenshot")
os.system("python3.5 -m easy_install pynput")

os.system("echo DEBUG Installing python modules progress 10 to 10 ")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
#python3.5 dependencies start
os.system("python3.5 -m easy_install theano")
os.system("rm -rf tensorflow-0.11.0rc0-py3-none-any.whl")
#os.system("wget https://github.com/hughperkins/tensorflow-cl/releases/download/v0.14.0/tensorflow-0.11.0rc0-py3-none-any.whl")
#os.system("python3.5 -m pip install --upgrade tensorflow-0.11.0rc0-py3-none-any.whl")
#os.system("python3.5 -m pip install --upgrade tensorflow-0.11.0rc0-py3-none-any.whl")
os.system("python3.5 -m easy_install tensorflow==1.7")
os.system("python3.5 -m easy_install tensorflow==1.7")
os.system("python3.5 -m easy_install numpy")
os.system("python3.5 -m easy_install mido")
os.system("python3.5 -m easy_install tqdm")
os.system("python3.5 -m easy_install itertools")
os.system("python3.5 -m easy_install sumy")
os.system("python3.5 -m easy_install tensorflow")
os.system("python3.5 -m easy_install music21")
os.system("python3.5 -m easy_install keras")
os.system("python3.5 -m easy_install pymarkovchain")
os.system("python3.5 -m easy_install nltk")
os.system("python3.5 -m easy_install docopt")
os.system("python3.5 -m easy_install pint")
os.system("python3.5 -m pip install chatterbot")
os.system("python3.5 -m pip install python-dateutil")
os.system("python3.5 -m pip install textgenrnn")
#breadability
os.system("echo DEBUG Almost done ")
os.system("python3.5 -m easy_install breadability")
os.system("magick display -antialias -alpha off -backdrop -window root /boot/fbload/InstDependencies.jpeg")
os.system("killall -KILL installui")
#os.system("python3.5 -c "import nltk; nltk.download('punkt')"")
#FLagging the system that the system is sucessfully modified for orionAI purposes
os.system(" echo instdone > /instdone ")
#python3.5 -m easy_install pint
os.system("echo DEBUG Installing edexUI ")
os.system("bash /ui/installui/installui.sh exit &")
os.system("bash /Assistant/locinst/UIhandler.sh")

os.system("echo DEBUG Transitioning to std environtment ")
#armspecialhandlercheck





#os.system("python2 -m easy_install caffe")
#os.system("-u orion yaourt -S caffe cuda cudnn --force --noconfirm --needed")
#os.system("pacman -S --needed gcc make pkg-config automake libtool alsa-lib --noconfirm")
#memory
